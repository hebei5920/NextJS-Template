generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
        
    
model User {
  id    Int     @id @default(autoincrement())
  email String  @unique

  // OAuth Provider Information
  supabaseId      String?  @unique @map("supabase_id") // Supabase Auth user ID
  provider        String?  // "google", "github", "email", etc.
  providerUserId  String?  @map("provider_user_id") // Provider's unique user ID
  
  // Profile Information
  avatarUrl       String?  @map("avatar_url")
  username        String?  @unique // GitHub username or display name
  
  
  // GitHub specific fields
  githubUsername  String?  @map("github_user_name")
  githubId        Int?     @map("github_id") // GitHub user ID
  
  // Google specific fields
  googleId        String?  @map("google_id") // Google user ID
  googleUsername  String?  @map("google_user_name")
 
  // Account status
  emailVerified   Boolean  @default(false) @map("email_verified")
  isActive        Boolean  @default(true) @map("is_active")
  
  // Payment and subscription
  credits         Float    @default(0.0) // 用户余额/积分，支持一位小数
  plan            String   @default("free") // 用户套餐: "free", "basic", "pro", "enterprise"
  
  // Timestamps
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  lastLoginAt     DateTime? @map("last_login_at")

  // Relationships
  orders          Order[]
  voiceModels     VoiceModel[]
  voices          Voice[]

  @@map("users")
}

model Order {
  id            Int      @id @default(autoincrement())
  userId        String   @map("user_id") // 关联用户ID (使用 supabaseId)
  price         Float?   // 订单价格
  product       String   // 产品名称，必填
  payEmail      String?  @map("pay_email") // 支付邮箱
  payName       String?  @map("pay_name") // 支付姓名
  payCurrency   String?  @map("pay_currency") // 支付货币
  status        String   @default("pending") // 订单状态: "pending", "completed", "failed", "cancelled"
  
  // Timestamps
  createDate    DateTime @default(now()) @map("create_date") // 创建时间
  updateDate    DateTime @updatedAt @map("update_date") // 更新时间

  // Relationship
  user          User?    @relation(fields: [userId], references: [supabaseId])

  @@map("orders")
}

model VoiceModel {
  id            Int      @id @default(autoincrement())
  modelId       String   @unique @map("model_id") // Speechify返回的语音模型ID
  userId        String   @map("user_id") // 用户的supabaseId
  gender        String   // 性别: "male" 或 "female"
  locale        String?  // 语音的语言/地区
  displayName   String   @map("display_name") // 显示名称
  avatarImage   String?  @map("avatar_image") // 头像图片URL
  
  // 时间戳
  createDate    DateTime @default(now()) @map("create_date")
  updateDate    DateTime @updatedAt @map("update_date")
  
  
  // 关联到用户表
  user          User?    @relation(fields: [userId], references: [supabaseId])
  voices        Voice[]

  @@map("voice_models")
}

model Voice {
  id                        Int      @id @default(autoincrement())
  vmId                      String   @map("vm_id") // VoiceModel的id
  userId                    String   @map("user_id") // 用户的supabaseId
  speechMarks               Json?    @map("speech_marks") // 语音标记数据，用于注释音频数据的元信息
  billableCharactersCount   Int      @map("billable_characters_count") // 可计费字符长度
  audioFormat               String   @map("audio_format") // 输出音频格式: wav, mp3, ogg, aac
  audioUrl                  String   @map("audio_url") // 转换后的音频地址（存储服务返回的URL）
  inputText                 String   @map("input_text") // 输入的文本内容
  model                     String   // 使用的模型: simba-english, simba-multilingual
  options                   Json?    // TTS选项配置
  
  // 时间戳
  createdAt                 DateTime @default(now()) @map("created_at")
  updatedAt                 DateTime @updatedAt @map("updated_at")
  
  // 关联关系
  user                      User?        @relation(fields: [userId], references: [supabaseId])
  voiceModel                VoiceModel   @relation(fields: [vmId], references: [modelId])

  @@map("voices")
}